//Libraries.
INCLUDE "%WEIDU_LIBRARY_DIR%/arrays.tpa"
INCLUDE "%WEIDU_LIBRARY_DIR%/projectiles.tpa"
INCLUDE "%WEIDU_LIBRARY_DIR%/internal/encoders.tpa"


//Auxiliary functions.
DEFINE_DIMORPHIC_FUNCTION replace_affixes STR_VAR spell = "" prefix = "" suffix = "" RET resource BEGIN
    //Sanitize.
    ACTION_IF NOT (2 = (STRING_LENGTH "%prefix%")) BEGIN
        FAIL "replace_affixes: prefix '%prefix%' is not 2 characters long."
    END

    ACTION_IF NOT (1 >= (STRING_LENGTH "%suffix%")) BEGIN
        FAIL "replace_affixes: prefix '%suffix%' is not 1 character long or less."
    END

    OUTER_TEXT_SPRINT regexp "^[sS][pP]\([a-zA-Z][a-zA-Z][0-9][0-9][0-9]\)$"
    ACTION_IF NOT (0 = ("%spell%" STRING_MATCHES_REGEXP "%regexp%")) BEGIN
        FAIL "replace_spell_affixes: string '%spell%' not a valid 7-character spell resource name."
    END

    //Generate name.
    OUTER_PATCH "%spell%" BEGIN
        REPLACE_EVALUATE CASE_INSENSITIVE "%regexp%" BEGIN
            TEXT_SPRINT resource "%prefix%%MATCH1%%suffix%"
        END ~~
    END

    //Normalize.
    ACTION_TO_LOWER resource
END

//Formats.
DEFINE_DIMORPHIC_FUNCTION encode_ref_literal STR_VAR value = "" RET return BEGIN
    OUTER_TEXT_SPRINT return "%value%"

    //Normalize and sanitize.
    ACTION_TO_LOWER return
    ACTION_IF NOT ((STRING_LENGTH "%return%") <= 8) BEGIN
        FAIL "encode_ref_literal: '%return%' is more than 8 characters long."
    END
END

DEFINE_DIMORPHIC_FUNCTION encode_spell_suffix STR_VAR value = "" RET return BEGIN
    OUTER_TEXT_SPRINT regexp "^\([a-zA-Z0-9]\):\([a-zA-Z0-9_]+\)$"

    //Sanitize.
    ACTION_IF NOT (0 = ("%value%" STRING_MATCHES_REGEXP "%regexp%")) BEGIN
        FAIL "encode_spell_suffix: string '%value%' does not have a valid format."
    END

    //Generate name.
    OUTER_PATCH "%value%" BEGIN
        REPLACE_EVALUATE CASE_INSENSITIVE "%regexp%" BEGIN
            TEXT_SPRINT suffix "%MATCH1%"
            TEXT_SPRINT spell "%MATCH2%"
        END ~~
    END

    LAF encode_spell_res STR_VAR value = "%spell%" RET return END   
    LAF replace_affixes STR_VAR
        spell = "%return%"
        prefix = "sp"
        suffix = "%suffix%"
    RET return = resource END
END

//Main function.
DEFINE_DIMORPHIC_FUNCTION get_resource_ref STR_VAR ref = "" RET resource BEGIN
    //Available formats.
    ACTION_DEFINE_ASSOCIATIVE_ARRAY encoders BEGIN
        "lit" => "encode_ref_literal"
        "spl" => "encode_spell_res"
        "lbl" => "encode_missile_res"
        "suf" => "encode_spell_suffix"
        "opc" => "encode_opcode_type"
        "sct" => "encode_spell_sectype"
    END

    OUTER_TEXT_SPRINT regexp "^#\([a-zA-Z0-9][a-zA-Z0-9_-]*\):\(.+\)$"
    //Sanitize.
    ACTION_IF NOT (("%ref%" STRING_MATCHES_REGEXP "%regexp%") = 0) THEN BEGIN
        FAIL "get_resource_ref: string '%ref%' does not have the format of a resource reference."
    END

    //Parse.
    OUTER_PATCH "%ref%" BEGIN
        REPLACE_EVALUATE "%regexp%" BEGIN
            TEXT_SPRINT name "%MATCH1%"
            TEXT_SPRINT argument "%MATCH2%"
        END ~~
    END

    //Get encoder's name.
    LAF get_array_element STR_VAR
        array = "encoders"
        key = "%name%"
    RET encoder = value END

    ACTION_IF ("%encoder%" STRING_EQUAL_CASE "*") BEGIN
        FAIL "get_resource_ref: unknown prefix '%name%' in '%ref%' for a resource converter."
    END

    LAF "%encoder%" STR_VAR value = "%argument%" RET resource = return END
END

//Encoders.
DEFINE_DIMORPHIC_FUNCTION encode_resource_ref STR_VAR value = "" RET return BEGIN
    LAF get_resource_ref STR_VAR ref = "%value%" RET return = resource END
END

DEFINE_DIMORPHIC_FUNCTION encode_bam_ref STR_VAR value = "" RET return BEGIN
    LAF get_resource_ref STR_VAR ref = "%value%" RET return = resource END

    //Sanitize.
    ACTION_IF NOT (FILE_EXISTS_IN_GAME "%return%.bam") BEGIN
        FAIL "encode_bam_ref: icon '%return%.bam' does not exist in game."
    END
END

DEFINE_DIMORPHIC_FUNCTION encode_projectile_ref STR_VAR value = "" RET return BEGIN
    LAF encode_resource_ref STR_VAR
        value = "%value%"
    RET resource = return END
    
    LAF get_projectile_id STR_VAR
        projectile = "%resource%"
    RET return = id END

    ACTION_IF (0 - 1 = return) BEGIN
        FAIL "encode_projectile_ref: resource '%resource%' for ref '%value%' does not exist in game."
    END
END

DEFINE_DIMORPHIC_FUNCTION encode_script_ref STR_VAR value = "" RET return BEGIN
    LAF get_resource_ref STR_VAR ref = "%value%" RET return = resource END

    //Sanitize.
    ACTION_IF NOT (FILE_EXISTS_IN_GAME "%return%.bcs") BEGIN
        FAIL "encode_script_ref: script '%return%.bcs' does not exist in game."
    END
END
